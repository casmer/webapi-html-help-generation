// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WebApiHelpPage
{
    using System.Web.Http.Description;
    using System.Web.Http.Controllers;
    using System.Collections.ObjectModel;
    using WebApiHelpPage.Models;
    using System.Web.Http;
    using System.Web;
    using System.Linq;
    using System.Threading;
    using System.Net.Http.Headers;
    using System.Collections.Generic;
    using WebApiHelpPage;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Api : ApiBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"

    var description = Model.ApiDescription;
    var title = description.HttpMethod.Method + " " + description.RelativePath;

            
            #line default
            #line hidden
            this.Write("\n\n<html>\n<head>\n    <title>");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(title));
            
            #line default
            #line hidden
            this.Write("</title>\n\t<style type=\"text/css\">\n\t\t");
            this.Write("pre.wrapped {\n    white-space: -moz-pre-wrap;\n    white-space: -pre-wrap;\n    whi" +
                    "te-space: -o-pre-wrap;\n    white-space: pre-wrap;\n}\n\n.warning-message-container " +
                    "{\n    margin-top: 20px;\n    padding: 0 10px;\n    color: #525252;\n    background:" +
                    " #EFDCA9;\n    border: 1px solid #CCCCCC;\n}\n\n.help-page-table {\n    width: 100%;\n" +
                    "    border-collapse: collapse;\n    text-align: left;\n    margin: 0px 0px 20px 0p" +
                    "x;\n    border-top: 2px solid #D4D4D4;\n}\n\n    .help-page-table th {\n        text-" +
                    "align: left;\n        font-weight: bold;\n        border-bottom: 2px solid #D4D4D4" +
                    ";\n        padding: 8px 6px 8px 6px;\n    }\n\n    .help-page-table td {\n        bor" +
                    "der-bottom: 2px solid #D4D4D4;\n        padding: 15px 8px 15px 8px;\n        verti" +
                    "cal-align: top;\n    }\n\n    .help-page-table pre, .help-page-table p {\n        ma" +
                    "rgin: 0px;\n        padding: 0px;\n        font-family: inherit;\n        font-size" +
                    ": 100%;\n    }\n\n    .help-page-table tbody tr:hover td {\n        background-color" +
                    ": #F3F3F3;\n    }\n\na:hover {\n    background-color: transparent;\n}\n\n.sample-header" +
                    " {\n    border: 2px solid #D4D4D4;\n    background: #76B8DB;\n    color: #FFFFFF;\n " +
                    "   padding: 8px 15px;\n    border-bottom: none;\n    display: inline-block;\n    ma" +
                    "rgin: 10px 0px 0px 0px;\n}\n\n.sample-content {\n    display: block;\n    border-widt" +
                    "h: 0;\n    padding: 15px 20px;\n    background: #FFFFFF;\n    border: 2px solid #D4" +
                    "D4D4;\n    margin: 0px 0px 10px 0px;\n}\n\n.api-name {\n    width: 40%;\n}\n\n.api-docum" +
                    "entation {\n    width: 60%;\n}\n\n.parameter-name {\n    width: 20%;\n}\n\n.parameter-do" +
                    "cumentation {\n    width: 50%;\n}\n\n.parameter-source {\n    width: 30%;\n}");
            this.Write("\n\t</style>\n\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
 foreach(string style in Options.StyleSheets) {
            
            #line default
            #line hidden
            this.Write("\n\t\t<link rel=\"stylesheet\" href=\"");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(style));
            
            #line default
            #line hidden
            this.Write("\" />\n\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\n</head>\n<body>\n<div id=\"body\">\n    <section class=\"featured\">\n        <div class" +
                    "=\"content-wrapper\">\n            <p>\n                <a href=\"");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\Api.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HomePageLink));
            
            #line default
            #line hidden
            this.Write("\">Help Page Home</a>\n            </p>\n        </div>\n    </section>\n    <section " +
                    "class=\"content-wrapper main-content clear-fix\">\n        ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"

    bool hasParameters = description.ParameterDescriptions.Count > 0;
    bool hasRequestSamples = Model.SampleRequests.Count > 0;
    bool hasResponseSamples = Model.SampleResponses.Count > 0;

            
            #line default
            #line hidden
            this.Write("\n<h1>");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(description.HttpMethod.Method));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(description.RelativePath));
            
            #line default
            #line hidden
            this.Write("</h1>\n<div>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 if (description.Documentation != null)
    { 
            
            #line default
            #line hidden
            this.Write("\n        <p>");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(description.Documentation));
            
            #line default
            #line hidden
            this.Write("</p>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 }
    else
    { 
            
            #line default
            #line hidden
            this.Write("\n        <p>No documentation available.</p>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\n\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 if (hasParameters || hasRequestSamples)
    { 
            
            #line default
            #line hidden
            this.Write("\n        <h2>Request Information</h2>\n        ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 if (hasParameters)
        { 
            
            #line default
            #line hidden
            this.Write("\n            <h3>Parameters</h3>\n            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"

    Collection<ApiParameterDescription> parameters = Model.ApiDescription.ParameterDescriptions;

            
            #line default
            #line hidden
            this.Write("\n<table class=\"help-page-table\">\n    <thead>\n    <tr><th>Name</th><th>Description" +
                    "</th><th>Additional information</th></tr>\n    </thead>\n    <tbody>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 foreach (ApiParameterDescription parameter in parameters)
    {
        string parameterDocumentation = parameter.Documentation != null ?
            parameter.Documentation :
            "No documentation available.";
    
        // Don't show CancellationToken because it's a special parameter
        if (parameter!=null && parameter.ParameterDescriptor != null && 
			parameter.ParameterDescriptor.ParameterType != null &&
			!typeof(CancellationToken).IsAssignableFrom(parameter.ParameterDescriptor.ParameterType))
        { 
            
            #line default
            #line hidden
            this.Write("\n            <tr>\n                <td><b>");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("</b></td>\n                <td><pre>");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterDocumentation));
            
            #line default
            #line hidden
            this.Write("</pre></td>\n                <td>\n                    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 switch (parameter.Source)
                    {
                        case ApiParameterSource.FromBody: 
            
            #line default
            #line hidden
            this.Write("\n                            <p>Define this parameter in the request <b>body</b>." +
                    "</p>\n                            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 break;
                        case ApiParameterSource.FromUri: 
            
            #line default
            #line hidden
            this.Write("\n                            <p>Define this parameter in the request <b>URI</b>.<" +
                    "/p>\n                            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 break;
                        case ApiParameterSource.Unknown:
                        default: 
            
            #line default
            #line hidden
            this.Write("\n                            <p>None.</p>\n                            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 break;
                    } 
            
            #line default
            #line hidden
            this.Write("\n                </td>\n            </tr>\n        ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Parameters.tt"
 } 
    } 
            
            #line default
            #line hidden
            this.Write("\n    </tbody>\n</table>");
            this.Write("\n        ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 } 
        if (hasRequestSamples)
        { 
            
            #line default
            #line hidden
            this.Write("\n            <h3>Request body formats</h3>\n\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 var ModelSamples = Model.SampleRequests; 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"

    // Group the samples into a single tab if they are the same.
    Dictionary<string, object> samples = ModelSamples.GroupBy(pair => pair.Value).ToDictionary(
        pair => String.Join(", ", pair.Select(m => m.Key.ToString()).ToArray()), 
        pair => pair.Key);
    var mediaTypes = samples.Keys;

            
            #line default
            #line hidden
            this.Write("\n<div>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 foreach (var mediaType in mediaTypes)
    { 
            
            #line default
            #line hidden
            this.Write("\n\t\t<h4 class=\"sample-header\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mediaType));
            
            #line default
            #line hidden
            this.Write("</h4>\n        <div class=\"sample-content\">\n            <span><b>Sample:</b></span" +
                    ">\n            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 var sample = samples[mediaType];
            if (sample == null)
            { 
            
            #line default
            #line hidden
            this.Write("\n                <p>Sample not available.</p>\n            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
            else
            {
				if (sample is TextSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<pre class=\"wrapped\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(((TextSample)sample).Text)));
            
            #line default
            #line hidden
            this.Write("</pre>\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
				else if (sample is ImageSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<img src=\"((TextSample)sample).Src\" />\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
				else if (sample is InvalidSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<div class=\"warning-message-container\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(((InvalidSample)sample).ErrorMessage)));
            
            #line default
            #line hidden
            this.Write("</div>\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
            } 
            
            #line default
            #line hidden
            this.Write("\n        </div>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\n</div>");
            this.Write("\n        ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 }
    } 
            
            #line default
            #line hidden
            this.Write(" \n       \n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 if (hasResponseSamples)
    { 
            
            #line default
            #line hidden
            this.Write("     \n        <h2>Response Information</h2> \n        <h3>Response body formats</h" +
                    "3>\n\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 var ModelSamples = Model.SampleResponses; 
            
            #line default
            #line hidden
            this.Write("\n\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"

    // Group the samples into a single tab if they are the same.
    Dictionary<string, object> samples = ModelSamples.GroupBy(pair => pair.Value).ToDictionary(
        pair => String.Join(", ", pair.Select(m => m.Key.ToString()).ToArray()), 
        pair => pair.Key);
    var mediaTypes = samples.Keys;

            
            #line default
            #line hidden
            this.Write("\n<div>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 foreach (var mediaType in mediaTypes)
    { 
            
            #line default
            #line hidden
            this.Write("\n\t\t<h4 class=\"sample-header\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mediaType));
            
            #line default
            #line hidden
            this.Write("</h4>\n        <div class=\"sample-content\">\n            <span><b>Sample:</b></span" +
                    ">\n            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 var sample = samples[mediaType];
            if (sample == null)
            { 
            
            #line default
            #line hidden
            this.Write("\n                <p>Sample not available.</p>\n            ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
            else
            {
				if (sample is TextSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<pre class=\"wrapped\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(((TextSample)sample).Text)));
            
            #line default
            #line hidden
            this.Write("</pre>\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
				else if (sample is ImageSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<img src=\"((TextSample)sample).Src\" />\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
				else if (sample is InvalidSample)
				{ 
            
            #line default
            #line hidden
            this.Write("\n\t\t\t\t\t<div class=\"warning-message-container\">");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(((InvalidSample)sample).ErrorMessage)));
            
            #line default
            #line hidden
            this.Write("</div>\n\t\t\t\t");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 }
            } 
            
            #line default
            #line hidden
            this.Write("\n        </div>\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\Samples.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\n</div>");
            this.Write("\n    ");
            
            #line 1 "c:\dev\ssui\webapi-html-help-generation\C#\WebApiHelpPageGenerator\Views\DisplayTemplates\HelpPageApiModel.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\n</div>");
            this.Write("\n    </section>\n</div>\n</body>\n</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class ApiBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
